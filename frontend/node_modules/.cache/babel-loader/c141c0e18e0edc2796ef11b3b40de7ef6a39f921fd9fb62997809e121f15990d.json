{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shakt\\\\OneDrive\\\\Desktop\\\\Tangle\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Auto-login with demo user\n  useEffect(() => {\n    const autoLogin = async () => {\n      try {\n        // Create a demo user automatically\n        const demoUser = {\n          id: 1,\n          full_name: \"Demo User\",\n          email: \"demo@tangle.com\",\n          phone_number: \"1234567890\",\n          address: \"Demo Address\",\n          locality: \"Demo Locality\",\n          pincode: \"600000\",\n          role: \"RESIDENT\",\n          is_active: true,\n          is_verified: true,\n          community: {\n            id: 1,\n            name: \"Demo Community\",\n            community_code: \"ANNA001\",\n            location: \"Demo Location\",\n            city: \"Demo City\",\n            state: \"Demo State\",\n            pincode: \"600000\"\n          },\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        setUser(demoUser);\n        setIsAuthenticated(true);\n        localStorage.setItem('token', 'demo-token-123');\n        localStorage.setItem('user', JSON.stringify(demoUser));\n      } catch (error) {\n        console.error('Auto-login failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    autoLogin();\n  }, []);\n  const login = async (emailOrPhone, password) => {\n    // Bypass actual login - always succeed\n    const demoUser = {\n      id: 1,\n      full_name: \"Demo User\",\n      email: emailOrPhone,\n      phone_number: emailOrPhone,\n      address: \"Demo Address\",\n      locality: \"Demo Locality\",\n      pincode: \"600000\",\n      role: \"RESIDENT\",\n      is_active: true,\n      is_verified: true,\n      community: {\n        id: 1,\n        name: \"Demo Community\",\n        community_code: \"ANNA001\",\n        location: \"Demo Location\",\n        city: \"Demo City\",\n        state: \"Demo State\",\n        pincode: \"600000\"\n      },\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n    setUser(demoUser);\n    setIsAuthenticated(true);\n    localStorage.setItem('token', 'demo-token-123');\n    localStorage.setItem('user', JSON.stringify(demoUser));\n    return {\n      success: true\n    };\n  };\n  const register = async userData => {\n    // Bypass actual registration - always succeed\n    const demoUser = {\n      id: 1,\n      full_name: userData.fullName || \"Demo User\",\n      email: userData.email,\n      phone_number: userData.phoneNumber,\n      address: userData.address || \"Demo Address\",\n      locality: userData.locality || \"Demo Locality\",\n      pincode: userData.pincode || \"600000\",\n      role: userData.role || \"RESIDENT\",\n      is_active: true,\n      is_verified: true,\n      community: {\n        id: 1,\n        name: \"Demo Community\",\n        community_code: \"ANNA001\",\n        location: \"Demo Location\",\n        city: \"Demo City\",\n        state: \"Demo State\",\n        pincode: \"600000\"\n      },\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n    setUser(demoUser);\n    setIsAuthenticated(true);\n    localStorage.setItem('token', 'demo-token-123');\n    localStorage.setItem('user', JSON.stringify(demoUser));\n    return {\n      success: true,\n      data: demoUser\n    };\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const updatedUser = {\n        ...user,\n        ...profileData\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Profile update failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","autoLogin","demoUser","id","full_name","email","phone_number","address","locality","pincode","role","is_active","is_verified","community","name","community_code","location","city","state","created_at","Date","toISOString","updated_at","localStorage","setItem","JSON","stringify","error","console","login","emailOrPhone","password","success","register","userData","fullName","phoneNumber","data","logout","removeItem","updateProfile","profileData","updatedUser","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shakt/OneDrive/Desktop/Tangle/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Auto-login with demo user\r\n  useEffect(() => {\r\n    const autoLogin = async () => {\r\n      try {\r\n        // Create a demo user automatically\r\n        const demoUser = {\r\n          id: 1,\r\n          full_name: \"Demo User\",\r\n          email: \"demo@tangle.com\",\r\n          phone_number: \"1234567890\",\r\n          address: \"Demo Address\",\r\n          locality: \"Demo Locality\",\r\n          pincode: \"600000\",\r\n          role: \"RESIDENT\",\r\n          is_active: true,\r\n          is_verified: true,\r\n          community: {\r\n            id: 1,\r\n            name: \"Demo Community\",\r\n            community_code: \"ANNA001\",\r\n            location: \"Demo Location\",\r\n            city: \"Demo City\",\r\n            state: \"Demo State\",\r\n            pincode: \"600000\"\r\n          },\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        };\r\n\r\n        setUser(demoUser);\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem('token', 'demo-token-123');\r\n        localStorage.setItem('user', JSON.stringify(demoUser));\r\n      } catch (error) {\r\n        console.error('Auto-login failed:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    autoLogin();\r\n  }, []);\r\n\r\n  const login = async (emailOrPhone, password) => {\r\n    // Bypass actual login - always succeed\r\n    const demoUser = {\r\n      id: 1,\r\n      full_name: \"Demo User\",\r\n      email: emailOrPhone,\r\n      phone_number: emailOrPhone,\r\n      address: \"Demo Address\",\r\n      locality: \"Demo Locality\",\r\n      pincode: \"600000\",\r\n      role: \"RESIDENT\",\r\n      is_active: true,\r\n      is_verified: true,\r\n      community: {\r\n        id: 1,\r\n        name: \"Demo Community\",\r\n        community_code: \"ANNA001\",\r\n        location: \"Demo Location\",\r\n        city: \"Demo City\",\r\n        state: \"Demo State\",\r\n        pincode: \"600000\"\r\n      },\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    setUser(demoUser);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('token', 'demo-token-123');\r\n    localStorage.setItem('user', JSON.stringify(demoUser));\r\n    \r\n    return { success: true };\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    // Bypass actual registration - always succeed\r\n    const demoUser = {\r\n      id: 1,\r\n      full_name: userData.fullName || \"Demo User\",\r\n      email: userData.email,\r\n      phone_number: userData.phoneNumber,\r\n      address: userData.address || \"Demo Address\",\r\n      locality: userData.locality || \"Demo Locality\",\r\n      pincode: userData.pincode || \"600000\",\r\n      role: userData.role || \"RESIDENT\",\r\n      is_active: true,\r\n      is_verified: true,\r\n      community: {\r\n        id: 1,\r\n        name: \"Demo Community\",\r\n        community_code: \"ANNA001\",\r\n        location: \"Demo Location\",\r\n        city: \"Demo City\",\r\n        state: \"Demo State\",\r\n        pincode: \"600000\"\r\n      },\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    setUser(demoUser);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('token', 'demo-token-123');\r\n    localStorage.setItem('user', JSON.stringify(demoUser));\r\n    \r\n    return { success: true, data: demoUser };\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const updatedUser = { ...user, ...profileData };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Profile update failed:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG;UACfC,EAAE,EAAE,CAAC;UACLC,SAAS,EAAE,WAAW;UACtBC,KAAK,EAAE,iBAAiB;UACxBC,YAAY,EAAE,YAAY;UAC1BC,OAAO,EAAE,cAAc;UACvBC,QAAQ,EAAE,eAAe;UACzBC,OAAO,EAAE,QAAQ;UACjBC,IAAI,EAAE,UAAU;UAChBC,SAAS,EAAE,IAAI;UACfC,WAAW,EAAE,IAAI;UACjBC,SAAS,EAAE;YACTV,EAAE,EAAE,CAAC;YACLW,IAAI,EAAE,gBAAgB;YACtBC,cAAc,EAAE,SAAS;YACzBC,QAAQ,EAAE,eAAe;YACzBC,IAAI,EAAE,WAAW;YACjBC,KAAK,EAAE,YAAY;YACnBT,OAAO,EAAE;UACX,CAAC;UACDU,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACpCC,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACrC,CAAC;QAEDzB,OAAO,CAACM,QAAQ,CAAC;QACjBF,kBAAkB,CAAC,IAAI,CAAC;QACxBuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC;QAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACxB,QAAQ,CAAC,CAAC;MACxD,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,SAAS;QACR7B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM4B,KAAK,GAAG,MAAAA,CAAOC,YAAY,EAAEC,QAAQ,KAAK;IAC9C;IACA,MAAM7B,QAAQ,GAAG;MACfC,EAAE,EAAE,CAAC;MACLC,SAAS,EAAE,WAAW;MACtBC,KAAK,EAAEyB,YAAY;MACnBxB,YAAY,EAAEwB,YAAY;MAC1BvB,OAAO,EAAE,cAAc;MACvBC,QAAQ,EAAE,eAAe;MACzBC,OAAO,EAAE,QAAQ;MACjBC,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE;QACTV,EAAE,EAAE,CAAC;QACLW,IAAI,EAAE,gBAAgB;QACtBC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,eAAe;QACzBC,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,YAAY;QACnBT,OAAO,EAAE;MACX,CAAC;MACDU,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCC,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;IAEDzB,OAAO,CAACM,QAAQ,CAAC;IACjBF,kBAAkB,CAAC,IAAI,CAAC;IACxBuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC;IAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACxB,QAAQ,CAAC,CAAC;IAEtD,OAAO;MAAE8B,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC;IACA,MAAMhC,QAAQ,GAAG;MACfC,EAAE,EAAE,CAAC;MACLC,SAAS,EAAE8B,QAAQ,CAACC,QAAQ,IAAI,WAAW;MAC3C9B,KAAK,EAAE6B,QAAQ,CAAC7B,KAAK;MACrBC,YAAY,EAAE4B,QAAQ,CAACE,WAAW;MAClC7B,OAAO,EAAE2B,QAAQ,CAAC3B,OAAO,IAAI,cAAc;MAC3CC,QAAQ,EAAE0B,QAAQ,CAAC1B,QAAQ,IAAI,eAAe;MAC9CC,OAAO,EAAEyB,QAAQ,CAACzB,OAAO,IAAI,QAAQ;MACrCC,IAAI,EAAEwB,QAAQ,CAACxB,IAAI,IAAI,UAAU;MACjCC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE;QACTV,EAAE,EAAE,CAAC;QACLW,IAAI,EAAE,gBAAgB;QACtBC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,eAAe;QACzBC,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,YAAY;QACnBT,OAAO,EAAE;MACX,CAAC;MACDU,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCC,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;IAEDzB,OAAO,CAACM,QAAQ,CAAC;IACjBF,kBAAkB,CAAC,IAAI,CAAC;IACxBuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC;IAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACxB,QAAQ,CAAC,CAAC;IAEtD,OAAO;MAAE8B,OAAO,EAAE,IAAI;MAAEK,IAAI,EAAEnC;IAAS,CAAC;EAC1C,CAAC;EAED,MAAMoC,MAAM,GAAGA,CAAA,KAAM;IACnB1C,OAAO,CAAC,IAAI,CAAC;IACbI,kBAAkB,CAAC,KAAK,CAAC;IACzBuB,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChChB,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAMC,WAAW,GAAG;QAAE,GAAG/C,IAAI;QAAE,GAAG8C;MAAY,CAAC;MAC/C7C,OAAO,CAAC8C,WAAW,CAAC;MACpBnB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACgB,WAAW,CAAC,CAAC;MACzD,OAAO;QAAEV,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAEK,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEA,KAAK,CAACgB;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,KAAK,GAAG;IACZjD,IAAI;IACJI,eAAe;IACfF,OAAO;IACPgC,KAAK;IACLI,QAAQ;IACRK,MAAM;IACNE;EACF,CAAC;EAED,oBACEtD,OAAA,CAACC,WAAW,CAAC0D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnD,QAAA,EAChCA;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvD,GAAA,CAtJWF,YAAY;AAAA0D,EAAA,GAAZ1D,YAAY;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}