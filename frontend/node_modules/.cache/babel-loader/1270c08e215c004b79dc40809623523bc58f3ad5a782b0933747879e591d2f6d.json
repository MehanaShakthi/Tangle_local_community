{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shakt\\\\OneDrive\\\\Desktop\\\\Tangle\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check for existing token on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Set default authorization header\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Verify token by getting user profile\n          const response = await axios.get('/api/auth/profile');\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Token verification failed:', error);\n          // Clear invalid token\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (emailOrPhone, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        emailOrPhone,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token and user data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please try again.';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/api/auth/register', {\n        fullName: userData.fullName,\n        email: userData.email,\n        phoneNumber: userData.phoneNumber,\n        password: userData.password,\n        address: userData.address,\n        locality: userData.locality,\n        pincode: userData.pincode,\n        communityCode: userData.communityCode,\n        role: userData.userRole\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token and user data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true,\n        data: user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed. Please try again.';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put('/api/auth/profile', profileData);\n      const updatedUser = response.data.user;\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Profile update failed:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Profile update failed. Please try again.';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","emailOrPhone","password","post","setItem","JSON","stringify","success","_error$response","_error$response$data","errorMessage","register","userData","fullName","email","phoneNumber","address","locality","pincode","communityCode","role","userRole","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","updatedUser","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shakt/OneDrive/Desktop/Tangle/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check for existing token on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          // Set default authorization header\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Verify token by getting user profile\r\n          const response = await axios.get('/api/auth/profile');\r\n          setUser(response.data.user);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Token verification failed:', error);\r\n          // Clear invalid token\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (emailOrPhone, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', {\r\n        emailOrPhone,\r\n        password\r\n      });\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set default authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      const errorMessage = error.response?.data?.error || 'Login failed. Please try again.';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', {\r\n        fullName: userData.fullName,\r\n        email: userData.email,\r\n        phoneNumber: userData.phoneNumber,\r\n        password: userData.password,\r\n        address: userData.address,\r\n        locality: userData.locality,\r\n        pincode: userData.pincode,\r\n        communityCode: userData.communityCode,\r\n        role: userData.userRole\r\n      });\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set default authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true, data: user };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      const errorMessage = error.response?.data?.error || 'Registration failed. Please try again.';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put('/api/auth/profile', profileData);\r\n      const updatedUser = response.data.user;\r\n      \r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Profile update failed:', error);\r\n      const errorMessage = error.response?.data?.error || 'Profile update failed. Please try again.';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}